//! TEST early_return
extern fun print(s: string);

fun main() {
    let a = 1;
    return;

    let b = 2;
    print(b);
}

//! TEST return_void
extern fun print(s: string);

fun main() {
    return print("this should be valid!");
}

//! TEST never_decl
extern fun print(s: string);

fun test() -> bool {
    let d = { return false; };
    true;
}

fun main() {
    if test() {
        print("true");
    } else {
        print("false");
    }
}

//! TEST never_block
extern fun print(s: string);

fun test() -> bool {
    {
        return false;
    };
    true;
}
fun main() {
    if test() {
        print("true");
    } else {
        print("false");
    }
}

//! TEST never_if
extern fun print(s: string);

fun test(a: bool) -> bool {
    let bl = if a {
        return true;
    } else {
        3;
    };
    
    bl == 2;
}
fun main() {
    if test(false) {
        print("true");
    } else {
        print("false");
    }
}

//! TEST never_while
extern fun print(s: string);

fun test_rt(a: bool) -> bool {
    while true {
        return false;
    }
    return a;
}
fun test_br(a: bool) -> bool {
    while true {
        break;
    }
    return a;
}
fun test_ct(a: bool) -> bool {
    while true {
        continue;
    }
    return a;
}

fun main() {
    if test_br(false) {
        print("true");
    } else {
        print("false");
    }
    if test_rt(true) {
        print("true");
    } else {
        print("false");
    }
}

//! TEST while_ret_break
extern fun print(s: string);

fun test(a: bool) -> bool {
    while true {
        if a {
            return true;
        } else {
            break;
        }
    }

    false;
}
fun main() {
    if test(false) {
        print("true");
    } else {
        print("false");
    }
}